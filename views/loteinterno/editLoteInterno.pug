- var title ='Actulizar Lote Interno';
include ..\includes\layout
block content
html(lang="es")
    head
        style.
            #formLoteInterno {
                max-width: 600px;
                margin: auto;
            }
            h2 {
                text-align: center;
                text-decoration: underline;
                text-underline-offset: 4px;
                margin-top: 10px;
            }
            .modal-content {
                background-color: #f1f1f1;
                padding: 20px;
                border-radius: 10px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            }
            .modal-header {
                background-color: #dc3545;
                color: white;
            }
            .modal-body {
                padding: 20px;
            }
            #mensajeAlerta{
                color: #721c24;
            }
            label {
                margin-top: 5px;
                margin-bottom: 5px;
            }
    body
        h2.text-center Actualice el Lote Interno
        if messages.error
            .alert.alert-danger
                = messages.error
        div.modal#alertModal(tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true")
            div.modal-dialog(role="document")
                div.modal-content
                    div.modal-header
                        h5.modal-title#alertModalLabel Alerta
                        button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
                            span(aria-hidden="true") ×
                    div.modal-body
                        p#mensajeAlerta Mensaje de alerta
        form#formLoteInterno(action="/lotesinternos/"+loteInterno.numeroDeSerie+"?_method=PUT" method="post")
            .form-group
                label.form-label(for="cantidadDeVacunas") Cantidad de Vacunas:
                .input-group
                    input.form-control.is-valid(type="text" value=loteInterno.numeroDeSerie disabled)
            .form-group
                label.form-label(for="idLaboratorio") Nombre del laboratorio:
                .input-group.has-validation
                    select.form-select(name="idLaboratorio" id="idLaboratorio" required)
                        each lab in laboratorios
                            if lab.idLaboratorio == loteInterno.idLaboratorio
                                option(value=lab.idLaboratorio selected)= lab.nombreLaboratorio
                            else
                                option(value=lab.idLaboratorio)= lab.nombreLaboratorio
            .form-group
                label.form-label(for="numeroDeLote") Número del lote proveedor:
                .input-group.has-validation
                    select.form-select(name="numeroDeLote" id="numeroDeLote" required)
            .form-group
                label.form-label(for="cantidadDeVacunas") Cantidad de Vacunas:
                .input-group.has-validation
                    input.form-control(type="text" id="cantidadDeVacunas" value=loteInterno.cantidadDeVacunas name="cantidadDeVacunas" required)
                    .invalid-feedback.d-none(id="cantidadDeVacunasVacio") El campo no puede estar vacío
                    .invalid-feedback.d-none(id="cantidadDeVacunasNumeros") Ingrese solo números positivos
            .form-group
                label.form-label(for="fechaDeLlegadaDepositoNacional") Fecha de llegada al Depósito Nacional:
                .input-group.has-validation
                    if loteInterno.fechaDeLlegadaDepositoNacional != null
                        input.form-control(type="date" id="fechaDeLlegadaDepositoNacional" name="fechaDeLlegadaDepositoNacional" class="fechaDeLlegadaDepositoNacional" value=loteInterno.fechaDeLlegadaDepositoNacional)
                    else
                        input.form-control(type="date" id="fechaDeLlegadaDepositoNacional" name="fechaDeLlegadaDepositoNacional" class="fechaDeLlegadaDepositoNacional")
                    .invalid-feedback.d-none(id="fechaDeLlegadaDepositoNacionalVacio") Seleccione el depósito nacional al que debe llegar
                    .invalid-feedback.d-none(id="fechaDeLlegadaDepositoNacionalSuperior") La fecha seleccionada es superior a la fecha actual
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionSeleccion") Seleccione un Depósito Nacional antes de seleccionar una fecha de llegada
            .form-group
                label.form-label(for="idDepositoNacional") Depósito Nacional:
                .input-group.has-validation
                    select.form-select(name="idDepositoNacional" id="idDepositoNacional" )
                        option(selected hidden value="") Seleccione un Deposito Nacional si corresponde
                            if loteInterno.idDepositoNacional != null
                                each dnac in depositosNacionales
                                    if(loteInterno.idDepositoNacional==dnac.idDepositoNacional)
                                        option(value=dnac.idDepositoNacional selected)= dnac.idDepositoNacional
                                    else
                                        option(value=dnac.idDepositoNacional)= dnac.idDepositoNacional
                            else
                                option(selected hidden value="") Seleccione un Deposito Nacional
                                each dnac in depositosNacionales
                                    option(value=dnac.idDepositoNacional)= dnac.idDepositoNacional
            .form-group
                label.form-label(for="fechaDeSalidaDepositoNacional") Fecha de salida al Depósito Provincial:
                .input-group.has-validation
                    if loteInterno.fechaDeLlegadaDepositoNacional != null
                        input.form-control(type="date" id="fechaDeSalidaDepositoNacional" name="fechaDeSalidaDepositoNacional" class="fechaDeSalidaDepositoNacional" value=loteInterno.fechaDeLlegadaDepositoNacional)
                    else
                        input.form-control(type="date" id="fechaDeSalidaDepositoNacional" name="fechaDeSalidaDepositoNacional" class="fechaDeSalidaDepositoNacional")
                    .invalid-feedback.d-none(id="fechaDeSalidaDepositoNacionalVacio") Seleccione el depósito provincial al que debe llegar
                    .invalid-feedback.d-none(id="fechaDeSalidaDepositoNacionalSuperior") La fecha seleccionada es superior a la fecha actual
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionSeleccion") Seleccione un Depósito Nacional y un Deposito Provincial antes de seleccionar una fecha de salida
                    .invalid-feedback.d-none(id="fechaDeSalidaDepositoNacionalAntiguo") La fecha ingresada debe ser posterior a la fecha de salida del depósito nacional
            .form-group
                label.form-label(for="fechaDeLlegadaDepositoProvincial") Fecha de llegada al Depósito Provincial:
                .input-group.has-validation
                    if loteInterno.fechaDeLlegadaDepositoNacional != null
                        input.form-control(type="date" id="fechaDeLlegadaDepositoProvincial" name="fechaDeLlegadaDepositoProvincial" class="fechaDeLlegadaDepositoProvincial" value=loteInterno.fechaDeLlegadaDepositoNacional)
                    else
                        input.form-control(type="date" id="fechaDeLlegadaDepositoProvincial" name="fechaDeLlegadaDepositoProvincial" class="fechaDeLlegadaDepositoProvincial")
                    .invalid-feedback.d-none(id="fechaDeLlegadaDepositoProvincialVacio") Seleccione el depósito provincial al que debe llegar
                    .invalid-feedback.d-none(id="fechaDeLlegadaDepositoProvincialSuperior") La fecha seleccionada es superior a la fecha actual
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionSeleccion") Seleccione un Depósito Nacional y un Deposito Provincial antes de seleccionar una fecha de llegada
                    .invalid-feedback.d-none(id="fechaDeLlegadaDepositoProvincialAntiguo") La fecha ingresada debe ser posterior a la fecha de llegada al depósito provincial
            .form-group
                label.form-label(for="idDepositoProvincial") Depósito Provincial:
                .input-group.has-validation
                    select.form-select(name="idDepositoProvincial" id="idDepositoProvincial" )
                        option(selected hidden value="") Seleccione un Deposito Provincial si corresponde
                            if loteInterno.idDepositoProvincial != null
                                each dpro in depositosProvinciales
                                    if(loteInterno.idDepositoProvincial==dpro.idDepositoProvincial)
                                        option(value=dpro.idDepositoProvincial selected)= dpro.idDepositoProvincial
                                    else
                                        option(value=dpro.idDepositoProvincial)= dpro.idDepositoProvincial
                            else
                                option(selected hidden value="") Seleccione un Deposito Provincial
                                each dpro in depositosProvinciales
                                    option(value=dpro.idDepositoProvincial)= dpro.idDepositoProvincial
            .form-group
                label.form-label(for="fechaDeSalidaDepositoProvincial") Fecha de salida al Centro de Vacunacion
                .input-group.has-validation
                    if loteInterno.fechaDeLlegadaDepositoNacional != null
                        input.form-control(type="date" id="fechaDeSalidaDepositoProvincial" name="fechaDeSalidaDepositoProvincial" class="fechaDeSalidaDepositoProvincial" value=loteInterno.fechaDeLlegadaDepositoNacional)
                    else
                        input.form-control(type="date" id="fechaDeSalidaDepositoProvincial" name="fechaDeSalidaDepositoProvincial" class="fechaDeSalidaDepositoProvincial")
                    .invalid-feedback.d-none(id="fechaDeSalidaDepositoProvincialVacio") Seleccione el centro de vacunación al que debe llegar
                    .invalid-feedback.d-none(id="fechaDeSalidaDepositoProvincialSuperior") La fecha seleccionada es superior a la fecha actual
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionSeleccion") Seleccione un Depósito Nacional, un Deposito Provincial y un Centro de Vacunación antes de seleccionar una fecha de salida
                    .invalid-feedback.d-none(id="fechaDeSalidaDepositoProvincialAntiguo") La fecha ingresada debe ser posterior a la fecha de llegada al depósito provincial
            .form-group
                label.form-label(for="fechaDeLlegadaCentroDeVacunacion") Fecha de llegada al Centro de Vacunacion
                .input-group.has-validation
                    if loteInterno.fechaDeLlegadaDepositoNacional != null
                        input.form-control(type="date" id="fechaDeLlegadaCentroDeVacunacion" name="fechaDeLlegadaCentroDeVacunacion" class="fechaDeLlegadaCentroDeVacunacion" value=loteInterno.fechaDeLlegadaDepositoNacional)
                    else
                        input.form-control(type="date" id="fechaDeLlegadaCentroDeVacunacion" name="fechaDeLlegadaCentroDeVacunacion" class="fechaDeLlegadaCentroDeVacunacion")
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionVacio") Seleccione el centro de vacunación al que debe llegar
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionSuperior") La fecha seleccionada es superior a la fecha actual
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionSeleccion") Seleccione un Depósito Nacional y un Deposito Provincial antes de seleccionar una fecha de llegada
                    .invalid-feedback.d-none(id="fechaDeLlegadaCentroDeVacunacionAntiguo") La fecha ingresada debe ser posterior a la fecha de salida del depósito provincial
            .form-group
                label.form-label(for="idCentroDeVacunacion") Centro de Vacunación:
                .input-group.has-validation
                    select.form-select(name="idCentroDeVacunacion" id="idCentroDeVacunacion" )
                        option(selected hidden value="") Seleccione un Centro de Vacunación si corresponde
                            if loteInterno.idCentroDeVacunacion != null
                                each ctroVac in centrosDeVacunaciones
                                    if(loteInterno.idCentroDeVacunacion==ctroVac.idCentroDeVacunacion)
                                        option(value=ctroVac.idCentroDeVacunacion selected)= ctroVac.idCentroDeVacunacion
                                    else
                                        option(value=ctroVac.idCentroDeVacunacion)= ctroVac.idCentroDeVacunacion
                            else
                                option(selected hidden value="") Seleccione un Centro de Vacunación
                                each ctroVac in centrosDeVacunaciones
                                    option(value=ctroVac.idCentroDeVacunacion)= ctroVac.idCentroDeVacunacion
            br
            button(type="submit" class="btn btn-primary") Guardar
            | &nbsp;&nbsp;&nbsp;&nbsp;
            button(type="button" class="btn btn-primary" onclick="window.history.back()") Volver

script.
    $(function (){
        function mostrarAlerta(mensaje) {
            $('#mensajeAlerta').text(mensaje);
            $('#alertModal').modal('show');
        }

        // Funciones para mostrar y quitar errores
        function mostrarError(campo, error) {
            campo.addClass('is-invalid').removeClass('is-valid').addClass();
            $('#' + campo.attr('id') + error).removeClass('d-none');
        }

        function quitarError(campo) {
            campo.addClass('is-valid').removeClass('is-invalid');
            $('div[id^=' + campo.attr('id') + '].invalid-feedback').addClass('d-none');
        }

        function cargarLote(){
            $('#numeroDeLote').empty()
            if(!$('#idLaboratorio').val()){
                $('#numeroDeLote').append('<option disabled selected hidden value="">Seleccione un Lote Proveedor</option>');
            } else {
                !{JSON.stringify(lotesProveedores)}.filter(lote => lote.idLaboratorio == $('#idLaboratorio').val()).forEach(lote => {
                    $('#numeroDeLote').append('<option value="' + lote.numeroDeLote + '">' + lote.numeroDeLote + '</option>');
                })  
            }
        }

        function validarCantidadDeVacunas() {
            quitarError($('#cantidadDeVacunas'))
            if ($('#cantidadDeVacunas').val() == '') {
                mostrarError($('#cantidadDeVacunas'), 'Vacio')
            } else if(!/^[0-9]{1,}$/.test($('#cantidadDeVacunas').val()) || $('#cantidadDeVacunas').val() < 0 || $('#cantidadDeVacunas').val()[0] == 0){
                mostrarError($('#cantidadDeVacunas'), 'Numeros')
            }
        }

        function validarFechaDeLlegadaAlDepNac() {
            quitarError($('#fechaDeLlegadaDepositoNacional'))
            if($('#fechaDeLlegadaDepositoNacional').val() != '' && !$('#idDepositoNacional').val()) {
                mostrarError($('#fechaDeLlegadaDepositoNacional'), 'Vacio');
            } else if($('#fechaDeLlegadaDepositoNacional').val() != '') {
                console.log('Fecha de llegada: ' + $('#fechaDeLlegadaDepositoNacional').val())
                let fechaIngresada = new Date($('#fechaDeLlegadaDepositoNacional').val())
                let fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($('#fechaDeLlegadaDepositoNacional'), 'Superior');
                }
            }
        }

        function validarFechaDeSalidaAlDepPro() {
            quitarError($('#fechaDeSalidaDepositoNacional'))
            if($('#fechaDeSalidaDepositoNacional').val() != '' && !$('#idDepositoProvincial').val()) {
                mostrarError($('#fechaDeSalidaDepositoNacional'), 'Vacio');
            } else if($('#fechaDeSalidaDepositoNacional').val() != '') {
                console.log('Fecha de llegada: ' + $('#fechaDeSalidaDepositoNacional').val())
                let fechaIngresada = new Date($('#fechaDeSalidaDepositoNacional').val())
                let fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($('#fechaDeSalidaDepositoNacional'), 'Superior');
                }
            }
        }

        function validarFechaDeLlegadaAlDepPro() {
            quitarError($('#fechaDeLlegadaDepositoProvincial'))
            if($('#fechaDeLlegadaDepositoProvincial').val() != '' && !$('#idDepositoProvincial').val()) {
                mostrarError($('#fechaDeLlegadaDepositoProvincial'), 'Vacio');
            } else if($('#fechaDeLlegadaDepositoProvincial').val() != '') {
                console.log('Fecha de llegada: ' + $('#fechaDeLlegadaDepositoProvincial').val())
                let fechaIngresada = new Date($('#fechaDeLlegadaDepositoProvincial').val())
                let fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($('#fechaDeLlegadaDepositoProvincial'), 'Superior');
                }
            }
        }

        function validarFechaDeSalidaAlCen() {
            quitarError($('#fechaDeSalidaDepositoProvincial'))
            if($('#fechaDeSalidaDepositoProvincial').val() != '' && !$('#idCentroDeVacunacion').val()) {
                mostrarError($('#fechaDeSalidaDepositoProvincial'), 'Vacio');
            } else if($('#fechaDeSalidaDepositoProvincial').val() != '') {
                console.log('Fecha de llegada: ' + $('#fechaDeSalidaDepositoProvincial').val())
                let fechaIngresada = new Date($('#fechaDeSalidaDepositoProvincial').val())
                let fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($('#fechaDeSalidaDepositoProvincial'), 'Superior');
                }
            }
        }

        function validarFechaDeLlegadaAlCen() {
            quitarError($('#fechaDeLlegadaCentroDeVacunacion'))
            if($('#fechaDeLlegadaCentroDeVacunacion').val() != '' && !$('#idCentroDeVacunacion').val()) {
                mostrarError($('#fechaDeLlegadaCentroDeVacunacion'), 'Vacio');
            } else if($('#fechaDeLlegadaCentroDeVacunacion').val() != '') {
                console.log('Fecha de llegada: ' + $('#fechaDeLlegadaCentroDeVacunacion').val())
                let fechaIngresada = new Date($('#fechaDeLlegadaCentroDeVacunacion').val())
                let fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($('#fechaDeLlegadaCentroDeVacunacion'), 'Superior');
                } else if(!$('#idDepositoNacional').val() || !$('#idDepositoProvincial').val()) {
                    mostrarError($('#fechaDeLlegadaCentroDeVacunacion'), 'Seleccion');
                    console.log('aaasd')
                } else if ($('#fechaDeLlegadaCentroDeVacunacion').val() < $('#fechaDeLlegadaDepositoNacional').val() || $('#fechaDeLlegadaCentroDeVacunacion').val() < $('#fechaDeSalidaDepositoNacional').val() || $('#fechaDeLlegadaCentroDeVacunacion').val() < $('#fechaDeLlegadaDepositoProvincial').val() || $('#fechaDeLlegadaCentroDeVacunacion').val() < $('#fechaDeSalidaDepositoProvincial').val()) {
                    mostrarError($('#fechaDeLlegadaCentroDeVacunacion'), 'Antiguo');
                }
            }
        }

        function validarFormulario() {
            let inputs = $('#formLoteInterno input, #formLoteInterno select');
            let camposInvalidos = false;
            inputs.each(function () {
                if ($(this).hasClass('is-invalid')) {
                    camposInvalidos = true;
                }
            });
            if (camposInvalidos) {
                mostrarAlerta("¡Datos incorrectos! Por favor, verifica la información ingresada.");
                return false;
            }
            return true;
        }

        // Eventos
        $('#idLaboratorio').on('change', function () {
            quitarError($(this))
            cargarLote()
        })

        $('#numeroDeLote').on('change', function () {
            quitarError($(this))
        })

        $('#cantidadDeVacunas').on('keyup focusout', function () {
            validarCantidadDeVacunas();
        });

        $('#fechaDeLlegadaDepositoNacional').on('keyup focusout', function () {
            validarFechaDeLlegadaAlDepNac()
        });

        $('#fechaDeSalidaDepositoNacional').on('keyup focusout', function () {
            validarFechaDeLlegadaAlDepNac()
            validarFechaDeSalidaAlDepPro()
        });

        $('#fechaDeLlegadaDepositoProvincial').on('keyup focusout', function () {
            validarFechaDeLlegadaAlDepNac()
            validarFechaDeSalidaAlDepPro()
            validarFechaDeLlegadaAlDepPro()
        });

        $('#fechaDeSalidaDepositoProvincial').on('keyup focusout', function () {
            validarFechaDeLlegadaAlDepNac()
            validarFechaDeSalidaAlDepPro()
            validarFechaDeLlegadaAlDepPro()
            validarFechaDeSalidaAlCen()
        });

        $('#fechaDeLlegadaCentroDeVacunacion').on('keyup focusout', function () {
            validarFechaDeLlegadaAlDepNac()
            validarFechaDeSalidaAlDepPro()
            validarFechaDeLlegadaAlDepPro()
            validarFechaDeSalidaAlCen()
            validarFechaDeLlegadaAlCen()
        });

        $('#idDepositoNacional, #idDepositoProvincial, #idCentroDeVacunacion').on('change', function () {
            if(!$(this).hasClass('is-valid')) {
                quitarError($(this));
            }
            validarFechaDeLlegadaAlDepNac();
            validarFechaDeLlegadaAlDepPro();
            validarFechaDeSalidaAlDepPro();
            validarFechaDeSalidaAlCen()
            validarFechaDeLlegadaAlCen()
        });

        let press = 0
        $('#alertModal').on('keypress', function (event) {
            // Si la tecla presionada es "Enter", oculta el modal
            if(event.key === 'Enter'){
                press = press + 1
            }
            if (event.key === 'Escape' || press == 2) {
                $('#alertModal').modal('hide');
                press = 0
            }
        });            

        // Evento cuando se oculta el modal
        $('#alertModal').on('hidden.bs.modal', function () {
            // Buscar el primer elemento con la clase 'is-invalid' y hacer foco en él
            var primerInvalido = $('.is-invalid:first');
            if (primerInvalido.length > 0) {
                primerInvalido.focus();
            }
        });

        $('#idLaboratorio, #numeroDeLote, #idDepositoNacional, #idDepositoProvincial, #idCentroDeVacunacion').trigger('change');
        $('#cantidadDeVacunas, #fechaDeLlegadaDepositoNacional, #fechaDeSalidaDepositoNacional, #fechaDeLlegadaDepositoProvincial, #fechaDeSalidaDepositoProvincial, #fechaDeLlegadaCentroDeVacunacion').trigger('focusout')
        $('#idLaboratorio').trigger('focus')

        // Asociar el evento submit al formulario
        $('#formLoteInterno input').on('keypress', function (event) {
            if (event.which === 13) {
                console.log("Formulario enviado por teclado");
                //console.log(validarFormulario());
                if(!validarFormulario()){
                    event.preventDefault();
                }
                // Puedes agregar lógica adicional aquí si es necesario
            }
        });

        $('#formLoteInterno button[type="submit"]').on('click', function (event) {
            console.log("Botón de envío clicado");
            if (!validarFormulario()) {
                event.preventDefault();
                console.log("Envío no exitoso");
                press = 1
            }
        });
    });
