- const title ='Actualización del lote proveedor'
include ..\includes\layout
block content
html(lang="es")
body
    h2.text-center Actualice los datos del lote proveedor
    if messages.error
        .alert.alert-danger
            = messages.error
    br
    div.modal#alertModal(tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true")
        div.modal-dialog(role="document")
            div.modal-content
                div.modal-header
                    h5.modal-title#alertModalLabel Alerta
                    button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
                        span(aria-hidden="true") ×
                div.modal-body
                    p#mensajeAlerta.text-center
    form#form(action="/lotesproveedores/"+loteProveedor.numeroDeLote+"?_method=PUT" method="post")
        .form-group
            label.form-label(for="numeroDeLote") Lote N°:
            .input-group.has-validation
                input.form-control.is-valid#numeroDeLote(type="text" name="numeroDeLote" value=loteProveedor.numeroDeLote disabled)
        .form-group
            label.form-label(for="idLaboratorio") Laboratorio de origen del lote:
            .input-group.has-validation
                select.form-select.is-valid#idLaboratorio(name="idLaboratorio" required)
        .form-group
            label.form-label(for="tipoDeVacuna") Tipo de vacuna que trae el lote:
            .input-group.has-validation
                select.form-select.is-valid#tipoDeVacuna(name="tipoDeVacuna" required)
        .form-group
            label.form-label(for="nombreComercial") Nombre comercial de la vacuna:
            .input-group.has-validation
                select.form-select.is-valid#nombreComercial(name="nombreComercial" required)
        .form-group
            label.form-label(for="cantidadDeLotesInternos") Cantidad de lotes internos que trae el lote :
            .input-group.has-validation
                input.form-control.is-valid#cantidadDeLotesInternos(type="text" title="Ingrese la cantidad de cajas que posee el lote" placeholder="Ingrese la cantidad de cajas que posee el lote" name="cantidadDeLotesInternos" value=loteProveedor.cantidadDeLotesInternos required)
                .invalid-feedback.d-none#cantidadDeLotesInternosVacio El campo no puede estar vacío
                .invalid-feedback.d-none#cantidadDeLotesInternosNumeros Ingrese solo números positivos
        .form-group
            label.form-label(for="fechaDeFabricacion") Fecha de fabricación de la vacuna:
            .input-group.has-validation
                input.form-control.is-valid#fechaDeFabricacion(type="date" name="fechaDeFabricacion" value=loteProveedor.fechaDeFabricacion required)
                .invalid-feedback.d-none#fechaDeFabricacionVacio El campo no puede estar vacío
                .invalid-feedback.d-none#fechaDeFabricacionSuperior La fecha de fabricación es superior a la fecha actual
                .invalid-feedback.d-none#fechaDeFabricacionAntiguo La fecha ingresada no puede ser anterior a tres años del actual
        .form-group
            label.form-label(for="fechaDeCompra") Fecha de compra de la vacuna:
            .input-group.has-validation
                input.form-control.is-valid#fechaDeCompra(type="date" name="fechaDeCompra" value=loteProveedor.fechaDeCompra required)
                .invalid-feedback.d-none#fechaDeCompraVacio El campo no puede estar vacío
                .invalid-feedback.d-none#fechaDeCompraSuperior La fecha de compra es superior a la fecha actual
                .invalid-feedback.d-none#fechaDeCompraImposible La fecha de fabricación está vacia
                .invalid-feedback.d-none#fechaDeCompraAntiguo La fecha ingresada no puede ser anterior a la fecha de fabricación
        .form-group
            label.form-label(for="fechaDeVencimiento") Fecha de vencimiento de la vacuna:
            .input-group.has-validation
                input.form-control.is-valid#fechaDeVencimiento(type="date" name="fechaDeVencimiento" value=loteProveedor.fechaDeVencimiento required)
                .invalid-feedback.d-none#fechaDeVencimientoVacio El campo no puede estar vacío
                .invalid-feedback.d-none#fechaDeVencimientoImposible La fecha de fabricación está vacia
                .invalid-feedback.d-none#fechaDeVencimientoAntiguo La fecha de vencimiento debe tener una diferencia mayor de cinco años con la fecha de fabricación
        br
        div.text-center
            button(type="submit" class="btn btn-primary") Actualizar
            | &nbsp;&nbsp;&nbsp;&nbsp;
            button(type="button" class="btn btn-primary" onclick="window.location.href='/lotesproveedores'") Volver
script.
    $(function (){
        function mostrarAlerta() {
            $(mensajeAlerta).text("¡Datos incorrectos! Por favor, verifica la información ingresada.")
            $(alertModal).modal('show')
        }

        function mostrarError(campo, error) {
            campo.addClass('is-invalid').removeClass('is-valid')
            $(`#${campo.attr('id')}${error}`).removeClass('d-none')
        }

        function quitarError(campo) {
            campo.addClass('is-valid').removeClass('is-invalid')
            $(`div[id^=${campo.attr('id')}].invalid-feedback`).addClass('d-none')
        }

        function cargarLaboratorios(){
            const laboratorios = !{JSON.stringify(laboratorios)}.filter(laboratorio => laboratorio.activo == 1)
            const lote = !{JSON.stringify(loteProveedor)}
            laboratorios.forEach(laboratorio => {
                if(laboratorio.idLaboratorio==lote.idLaboratorio)
                    $(idLaboratorio).append('<option selected value="' + laboratorio.idLaboratorio + '">' + laboratorio.nombreLaboratorio + '</option>')
                else 
                    $(idLaboratorio).append('<option value="' + laboratorio.idLaboratorio + '">' + laboratorio.nombreLaboratorio + '</option>')
            })
        }

        function cargarTiposDeVacunas(){
            [
                "Tuberculosis",
                "Meningitis-Neumonía",
                "Difteria-Tétanos-Hepatitis B",
                "Antipoliomelítica",
                "Sarampión-Rubéola-Paperas",
                "Rotavirus",
                "Meningococo",
                "Antigripal",
                "Hepatitis A",
                "Varicela",
                "HPV"
            ].forEach(tipo => {
                if(tipo == !{JSON.stringify(loteProveedor)}.tipoDeVacuna){
                    $(tipoDeVacuna).append(`<option selected value="${tipo}">${tipo}</option>`)
                } else {
                    $(tipoDeVacuna).append(`<option value="${tipo}">${tipo}</option>`)
                }
            })
        }

        function cargarNombresComerciales(){
            [
                "BCG",
                "Neumococo Conjugada",
                "Quíntuple",
                "IPV",
                "Triple Viral",
                "Triple Bacteriana Celular",
                "Triple Bacteriana Acelular",
                "Influenzae b",
                "Doble Bacteriana",
                "Virus Papiloma Humano"
            ].forEach(nombre => {
                if(nombre == !{JSON.stringify(loteProveedor)}.nombreComercial){
                    $(nombreComercial).append(`<option selected value="${nombre}">${nombre}</option>`)
                } else {
                    $(nombreComercial).append(`<option value="${nombre}">${nombre}</option>`)
                }
            })
        }

        function validarCantidadDeLotesInternos() {
            quitarError($(cantidadDeLotesInternos))
            if ($(cantidadDeLotesInternos).val() == '') {
                mostrarError($(cantidadDeLotesInternos), 'Vacio')
            } else if(!/^[0-9]{1,}$/.test($(cantidadDeLotesInternos).val()) || $(cantidadDeLotesInternos).val() < 0 || $(cantidadDeLotesInternos).val()[0] == 0){
                mostrarError($(cantidadDeLotesInternos), 'Numeros')
            }
        }

        function validarFechaDeFabricacion() {
            quitarError($(fechaDeFabricacion))
            if (!$(fechaDeFabricacion).val()) {
                mostrarError($(fechaDeFabricacion), 'Vacio')
            } else {
                const fechaIngresada = new Date($(fechaDeFabricacion).val())
                const fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($(fechaDeFabricacion), 'Superior')
                } else {
                    fechaActual.setFullYear(fechaActual.getFullYear()-3)
                    if (fechaIngresada < fechaActual) {
                        mostrarError($(fechaDeFabricacion), `Antiguo`)
                    } 
                }
            }
        }

        function validarFechaDeCompra() {
            quitarError($(fechaDeCompra))
            if (!$(fechaDeCompra).val()) {
                mostrarError($(fechaDeCompra), 'Vacio')
            } else {
                const fechaIngresada = new Date($(fechaDeCompra).val())
                const fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($(fechaDeCompra), 'Superior')
                } else if (!$(fechaDeFabricacion).val()) {
                    mostrarError($(fechaDeCompra), `Imposible`)
                } else {
                    const fechaFabricacion = new Date($(fechaDeFabricacion).val())
                    if(fechaIngresada < fechaFabricacion) {
                        mostrarError($(fechaDeCompra), `Antiguo`)
                    }
                } 
            }
        }

        function validarFechaDeVencimiento() {
            quitarError($(fechaDeVencimiento))
            if (!$(fechaDeVencimiento).val()) {
                mostrarError($(fechaDeVencimiento), 'Vacio')
            } else {
                const fechaIngresada = new Date($(fechaDeVencimiento).val())
                if (!$(fechaDeFabricacion).val()) {
                    mostrarError($(fechaDeVencimiento), `Imposible`)
                } else {
                    const fechaFabricacion = new Date($(fechaDeFabricacion).val())
                    fechaIngresada.setFullYear(fechaIngresada.getFullYear()-5)
                    if(fechaIngresada < fechaFabricacion) {
                        mostrarError($(fechaDeVencimiento), `Antiguo`)
                    }
                } 
            }
        }

        function validarFormulario() {
            const inputs = $('#form input, #form select')
            let camposInvalidos = false
            inputs.each(function () {
                if ($(this).hasClass('is-invalid')) {
                    camposInvalidos = true
                }
            })
            if (camposInvalidos) {
                mostrarAlerta("¡Datos incorrectos! Por favor, verifica la información ingresada.")
                return false
            }
            return true
        }

        cargarLaboratorios()
        cargarTiposDeVacunas()
        cargarNombresComerciales()

        $(cantidadDeLotesInternos).on('keyup focusout', function () {
            validarCantidadDeLotesInternos()
        })

        $(fechaDeFabricacion).on('keyup focusout', function () {
            validarFechaDeFabricacion()
            validarFechaDeCompra()
            validarFechaDeVencimiento()
        })

        $(fechaDeCompra).on('keyup focusout', function () {
            validarFechaDeCompra()
        })

        $(fechaDeVencimiento).on('keyup focusout', function () {
            validarFechaDeVencimiento()
        })

        let press = 0
        $(alertModal).on('keypress', function (event) {
            if(event.key === 'Enter'){
                press = press + 1
            }
            if (event.key === 'Escape' || press == 2) {
                $(alertModal).modal('hide')
                press = 0
            }
        })

        $(alertModal).on('hidden.bs.modal', function () {
            const primerInvalido = $('.is-invalid:first')
            if (primerInvalido.length > 0) {
                primerInvalido.focus()
            }
        })

        $(cantidadDeLotesInternos).trigger('focus')

        $('#form input').on('keypress', function (event) {
            if (event.which === 13) {
                if(!validarFormulario()){
                    event.preventDefault()
                }
            }
        })

        $('#form button[type="submit"]').on('click', function (event) {
            if (!validarFormulario()) {
                event.preventDefault()
                press = 1
            }
        })
    })