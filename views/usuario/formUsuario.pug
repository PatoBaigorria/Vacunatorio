- var title ='Alta de un usuario'
include ..\includes\layout
block content
html(lang="es")
body
    h2.text-center Ingrese los datos del usuario
    if messages.error
        .alert.alert-danger
            = messages.error
    div.modal#alertModal(tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true")
        div.modal-dialog(role="document")
            div.modal-content
                div.modal-header
                    h5.modal-title#alertModalLabel Alerta
                    button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
                        span(aria-hidden="true") ×
                div.modal-body
                    p#mensajeAlerta.text-center Mensaje de alerta
    form#form(action="/usuarios" method="post")
        .form-group
            label.form-label(for="rol") Rol del usuario:
            .input-group.has-validation
                select.form-select(name="rol" id="rol" required)
                    option(disabled selected hidden value="") Selecciona un rol
                    option(value="Super Admin") Super Admin
                    option(value="Gestor de compras") Gestor de compras
                    option(value="Operador de logistica") Operador de logística
                    option(value="Agente de salud") Agente de salud
                .invalid-feedback.d-none(id="rolSinSeleccionar") Seleccione un rol
        .form-group
            label.form-label(for="nombre") Nombre del usuario:
            .input-group.has-validation
                input.form-control(type="text" id="nombre" name="nombre" placeholder="Ingrese el nombre del usuario" required)
                .invalid-feedback.d-none(id="nombreVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="nombreInvalido") El nombre debe contener más de dos y menos de cincuenta y un caracteres
                .invalid-feedback.d-none(id="nombreNumeros") El nombre solo puede contener letras
        .form-group
            label.form-label(for="apellido") Apellido del usuario:
            .input-group.has-validation
                input.form-control(type="text" id="apellido" name="apellido" placeholder="Ingrese el apellido del usuario" required)
                .invalid-feedback.d-none(id="apellidoVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="apellidoInvalido") El apellido debe contener más de dos y menos de cincuenta y un caracteres
                .invalid-feedback.d-none(id="apellidoNumeros") El apellido solo puede contener letras
        .form-group
            label.form-label(form="provincia") Provincia:
            .input-group.has-validation
                select.form-select(name="provincia" id="provincia" required)
                    option(disabled selected hidden value="") Selecciona una provincia
                    each provincia in provincias
                        option(value=provincia)= provincia
                .invalid-feedback.d-none(id="provinciaSinSeleccionar") Seleccione una provincia
        .form-group
            label.form-label(for="localidad") Localidad:
            .input-group.has-validation
                select.form-select(name="localidad" id="localidad" required)
                    option(disabled selected hidden value="") Selecciona una localidad
                .invalid-feedback.d-none(id="localidadSinSeleccionar") Seleccione una localidad
        .form-group
            label.form-label(for="email") Email:
            .input-group.has-validation
                input.form-control(type="email" id="email" name="email" placeholder="Ingrese el email del usuario" title="Ingrese un email válido" required)
                .invalid-feedback.d-none(id="emailVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="emailInvalido") El email no es válido
        .form-group
            label.form-label(for="password") Contraseña:
            .input-group.has-validation
                input.form-control(type="password" id="password" name="password" placeholder="Ingrese una contraseña" required)
                .invalid-feedback.d-none(id="passwordVacio") El campo no puede estar vacío
        br
        div.text-center
            button(type="submit" class="btn btn-primary") Alta
            | &nbsp;&nbsp;&nbsp;&nbsp;
            button(type="button" class="btn btn-primary" onclick="window.history.back()") Volver

script.
    document.addEventListener('DOMContentLoaded', function () {
        const provinciaSelect = document.getElementById('provincia');
        const localidadSelect = document.getElementById('localidad');

        provinciaSelect.addEventListener('change', async function () {
            const selectedProvincia = provinciaSelect.value;

            try {
                const response = await fetch(`https://apis.datos.gob.ar/georef/api/localidades?provincia=${selectedProvincia}`);
                const data = await response.json();

                // Limpiar opciones actuales
                localidadSelect.innerHTML = '';

                // Agregar opción por defecto
                const defaultOption = document.createElement('option');
                defaultOption.disabled = true;
                defaultOption.selected = true;
                defaultOption.hidden = true;
                defaultOption.value = "";
                defaultOption.textContent = "Selecciona una localidad";
                localidadSelect.appendChild(defaultOption);

                // Agregar opciones actualizadas
                const localidades = data.localidades.map(localidad => localidad.nombre);
                localidades.sort((a, b) => a.localeCompare(b)); // Ordenar alfabéticamente

                localidades.forEach(localidad => {
                    const option = document.createElement('option');
                    option.value = localidad; // Usar el nombre de la localidad
                    option.textContent = localidad; // Usar el nombre de la localidad
                    localidadSelect.appendChild(option);
                });

                // Limpiar la selección de localidad
                localidadSelect.value = ""; // Mantener "Selecciona una localidad"

                // Validar el campo provincia
                validarCampo($(provinciaSelect));

                // Limpiar el estado de localidad
                quitarError($(localidadSelect));

            } catch (error) {
                console.error('Error al obtener localidades:', error);
            }
        });

        // Llamar la función de cambio para cargar las localidades iniciales
        $('#provincia').trigger('change');
    });

    $(function () {
        function mostrarAlerta() {
            $('#mensajeAlerta').text("¡Datos incorrectos! Por favor, verifica la información ingresada.");
            $('#alertModal').modal('show');
        }

        // Funciones para mostrar y quitar errores
        function mostrarError(campo, error) {
            campo.addClass('is-invalid').removeClass('is-valid');
            $('#' + campo.attr('id') + error).removeClass('d-none');
        }

        function quitarError(campo) {
            campo.addClass('is-valid').removeClass('is-invalid');
            $('div[id^=' + campo.attr('id') + '].invalid-feedback').addClass('d-none');
        }

        function validarCampo(campo) {
            quitarError(campo);
            if (!campo.val()) {
                mostrarError(campo, 'SinSeleccionar');
            }
        }

        function validarContrasenia(campo) {
            quitarError(campo);
            if (!campo.val()) {
                mostrarError(campo, 'Vacio');
            }
        }

        function validarNombreYApellido(campo) {
            quitarError(campo);
            if (!campo.val()) {
                mostrarError(campo, 'Vacio');
            } else if (!/^[A-Za-záéíóúüñÁÉÍÓÚÜÑ\s]{1,}$/.test(campo.val())) {
                mostrarError(campo, 'Numeros');
            } else if (campo.val().length < 3 || campo.val().length > 50) {
                mostrarError(campo, 'Invalido');
            }
        }

        function validarEmail() {
            quitarError($('#email'));
            if (!$('#email').val()) {
                mostrarError($('#email'), 'Vacio');
            } else if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test($('#email').val())) {
                mostrarError($('#email'), 'Invalido');
            }
        }

        function validarComboBox() {
            validarCampo($('#rol'));
            validarCampo($('#provincia'));
            validarCampo($('#localidad'));
        }

        function validarFormulario() {
            let inputs = $('#form input, #form select');
            let camposInvalidos = false;
            inputs.each(function () {
                if ($(this).hasClass('is-invalid')) {
                    camposInvalidos = true;
                }
            });
            if (camposInvalidos) {
                mostrarAlerta();
                return false;
            }
            return true;
        }

        // Eventos
        $('#nombre, #apellido').on('keyup focusout', function () {
            validarNombreYApellido($(this));
        });

        $('#password').on('keyup focusout', function () {
            validarContrasenia($(this));
        });

        $('#rol, #provincia, #localidad').on('change', function () {
            validarComboBox();
        });

        $('#email').on('keyup focusout', function () {
            validarEmail();
        });

        let press = 0;
        $('#alertModal').on('keyup', function (event) {
            // Si la tecla presionada es "Enter", oculta el modal
            if (event.key === 'Enter') {
                press = press + 1;
            }
            if (event.key === 'Escape' || press == 2) {
                $('#alertModal').modal('hide');
                press = 0;
            }
        });

        $('#alertModal').on('hidden.bs.modal', function () {
            // Buscar el primer elemento con la clase 'is-invalid' y hacer foco en él
            var primerInvalido = $('.is-invalid:first');
            if (primerInvalido.length > 0) {
                primerInvalido.focus();
            }
        });

        $('#nombre, #apellido, #email, #password').trigger('focusout');
        $('#rol, #provincia, #localidad').trigger('change');
        $('#nombre').trigger('focus');

        // Asociar el evento submit al formulario
        $('#form input').on('keypress', function (event) {
            if (event.which === 13) {
                if (!validarFormulario()) {
                    event.preventDefault();
                }
            }
        });

        $('#form button[type="submit"]').on('click', function (event) {
            if (!validarFormulario()) {
                event.preventDefault();
                press = 1;
            }
        });
    });
