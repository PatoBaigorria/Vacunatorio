- var title ='Alta de una usuario'
include ..\includes\layout
block content
html(lang="es")
head
    link(rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="")
    script(src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin="")
body
    h2.text-center Ingrese los datos de la usuario
    if messages.error
        .alert.alert-danger
            = messages.error
    div.modal#alertModal(tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true")
        div.modal-dialog(role="document")
            div.modal-content
                div.modal-header
                    h5.modal-title#alertModalLabel Alerta
                    button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
                        span(aria-hidden="true") ×
                div.modal-body
                    p#mensajeAlerta.text-center Mensaje de alerta
    form#form(action="/usuarios" method="post")
        .form-group
            label.form-label(for="idRol") Rol del usuario:
            .input-group.has-validation
                select.form-select(name="idRol", id="idRol", required)
                    option(disabled selected hidden value="") Selecciona un rol
                    option(value="1") Super Admin
                    option(value="2") Usuario Común
                    option(value="3") Invitado
                    option(value="4") Agente
                .invalid-feedback.d-none(id="idRolSinSeleccionar") Seleccione un rol
        .form-group
            label.form-label(for="nombreUsuario") Nombre de usuario:
            .input-group.has-validation
                input.form-control(type="text" id="nombreUsuario" name="nombreUsuario" placeholder="Ingrese un nombre de usuario" required)
                .invalid-feedback.d-none(id="nombreVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="nombreInvalido") El nombre debe contener más de dos y menos de cincuenta y un caracteres
                .invalid-feedback.d-none(id="nombreNumeros") El nombre solo puede contener letras
        .form-group
            label.form-label(for="email") Email:
            .input-group.has-validation
                input.form-control(type="email" id="email" name="email" placeholder="Ingrese el email de la persona" title="Ingrese un email válido" required)
                .invalid-feedback.d-none(id="emailVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="emailInvalido") El email no es válido
        .form-group
            label.form-label(for="password") Contraseña:
            .input-group.has-validation
                input.form-control(type="password" id="password" name="password" placeholder="Ingrese una contraseña" required)
                .invalid-feedback.d-none(id="passwordVacio") El campo no puede estar vacío
        br
        div.text-center
            button(type="submit" class="btn btn-primary") Alta
            | &nbsp;&nbsp;&nbsp;&nbsp;
            button(type="button" class="btn btn-primary" onclick="window.history.back()") Volver
script.
    $(function () {
        function mostrarAlerta() {
            $('#mensajeAlerta').text("¡Datos incorrectos! Por favor, verifica la información ingresada.");
            $('#alertModal').modal('show');
        }

        // Funciones para mostrar y quitar errores
        function mostrarError(campo, error) {
            campo.addClass('is-invalid').removeClass('is-valid').addClass();
            $('#' + campo.attr('id') + error).removeClass('d-none');
        }

        function quitarError(campo) {
            campo.addClass('is-valid').removeClass('is-invalid');
            $('div[id^=' + campo.attr('id') + '].invalid-feedback').addClass('d-none');
        }

        function validarContrasenia(campo) {
            quitarError(campo)
            if(!campo.val()){
                mostrarError(campo, 'Vacio');
            }  
        }

        function validarNombreUsuario(campo){
            quitarError(campo);
            if(!campo.val()){
                mostrarError(campo, 'Vacio');
            } else if(!/^[A-Za-záéíóúüñÁÉÍÓÚÜÑ\s]{1,}$/.test(campo.val())){
                mostrarError(campo, 'Numeros');
            } else if(campo.val().length < 3 || campo.val().length > 50){
                mostrarError(campo, 'Invalido');
            }
        }

        function validarEmail(){
            quitarError($('#email'));
            if (!$('#email').val()) {
                mostrarError($('#email'), 'Vacio');
            } else if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test($('#email').val())) {
                mostrarError($('#email'), 'Invalido');
            } 
        }

        function validarComboBox(campo){
            if(!campo.val()){
                mostrarError(campo, 'SinSeleccionar');
                $('#' + campo.attr('id') + 'SinSeleccionar').removeClass('d-none');
            } else {
                quitarError(campo);
            }
        }

        function validarFormulario() {
            let inputs = $('#form input:visible:not([d-none]), #form select:visible:not([d-none])');
            let camposInvalidos = false;
            inputs.each(function () {
                if ($(this).hasClass('is-invalid')) {
                    camposInvalidos = true;
                }
            });
            if (camposInvalidos) {
                mostrarAlerta();
                return false;
            }
            return true;
        }

        // Eventos
        $('#nombreUsuario').on('keyup focusout', function () {
            validarNombreUsuario($(this))
        });

        $('#password').on('keyup focusout', function () {
            validarContrasenia($(this))
        });

        $('#email').on('keyup focusout', function() {
            validarEmail()
        });

        let press = 0
        $('#alertModal').on('keyup', function (event) {
            // Si la tecla presionada es "Enter", oculta el modal
            if(event.key === 'Enter'){
                press = press+1
            }
            if (event.key === 'Escape' || press == 2) {
                $('#alertModal').modal('hide');
                press = 0
            }
        });

        $('#alertModal').on('hidden.bs.modal', function () {
            // Buscar el primer elemento con la clase 'is-invalid' y hacer foco en él
            var primerInvalido = $('.is-invalid:first');
            if (primerInvalido.length > 0) {
                primerInvalido.focus();
            }
        });

        // Evento cuando se oculta el modal
        $('#alertModal').on('hidden.bs.modal', function () {
            // Buscar el primer elemento con la clase 'is-invalid' y hacer foco en él
            var primerInvalido = $('.is-invalid:first');
            if (primerInvalido.length > 0) {
                primerInvalido.focus();
            }
        });

        $('#nombreUsuario, #email, #password').trigger('focusout');
        $('#idRol').trigger('change');
        $('#nombreUsuario').trigger('focus')

        // Asociar el evento submit al formulario
        $('#form input').on('keypress', function (event) {
            if (event.which === 13) {
                console.log("Formulario enviado por teclado");
                //console.log(validarFormulario());
                if(!validarFormulario()){
                    event.preventDefault();
                }
                // Puedes agregar lógica adicional aquí si es necesario
            }
        });

        $('#form button[type="submit"]').on('click', function (event) {
            console.log("Botón de envío clicado");
            if (!validarFormulario()) {
                event.preventDefault();
            }
        });

    });
