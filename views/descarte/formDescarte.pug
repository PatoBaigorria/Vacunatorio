- var title ='Crear Descarte de Vacunas'
include ..\includes\layout
block content
html(lang="es")
    head
        style.
            #formDescarte {
                max-width: 600px;
                margin: auto;
            }
            h2 {
                text-align: center;
                text-decoration: underline;
                text-underline-offset: 4px;
                margin-top: 10px;
            }
            label {
                margin-bottom: 5px;
            }
    body
        #formDescarte
            h2.text-center Crear un Descarte
            if messages.error
                .alert.alert-danger
                    = messages.error
            br
            form(action="/descartes" method="post")
                .form-group
                    label.form-label(for="DNIAgente") Seleccione un Agente de Salud Existente:
                    select.form-select(name="DNIAgente" id="DNIAgente" required)
                        option(value="") Seleccione un Agente de Salud
                            each persona in personas
                                if(persona.ocupacion === "agente de salud")
                                    option(value=persona.DNI)= persona.nombre + ' ' + persona.apellido
                #agenteInvalido.invalid-feedback    
                br
                .form-group
                    label.form-label(for="numeroDeSerie") Nº de Serie Lote Interno:
                    select.form-select(name="numeroDeSerie" id="numeroDeSerie" required)
                        option(value="") Selecciona un Lote Interno
                            each loteI in lotesInternos
                                option(value=loteI.numeroDeSerie)= loteI.numeroDeSerie
                #numSerieInvalido.invalid-feedback    
                br
                .form-group
                    label.form-label(for="empresaDescartante") Empresa Descartante:
                    select.form-select(name="empresaDescartante" id="empresaDescartante" required)
                        option(value="") Seleccione una Empresa
                        option(value="Veolia") Veolia
                        option(value="Clean Harbors") Clean Harbors
                        option(value="Waste Management") Waste Management
                        option(value="Stericycle") Stericycle
                #empDescartanteInvalido.invalid-feedback    
                br
                .form-group
                    label.form-label(for="motivo") Motivo Descarte:
                    select.form-select(name="motivo" id="motivo" required)
                        option(value="") Seleccione un Motivo
                        option(value="Vencida") Vencida
                        option(value="Rotura") Rotura
                        option(value="Cadena Pérdida de Frío") Cadena Pérdida de Frío
                        option(value="Contaminación") Contaminación
                #motivoInvalido.invalid-feedback    
                br
                .form-group
                    label.form-label(for="cant-vac") Cantidad de Vacunas:
                    .input-group.has-validation
                        input.form-control(type="number" id="cant-vac" name="cantidadDeVacunas" required)
                        .invalid-feedback(id="cantVacunasInvalido") Ingrese solo números positivos y mayor a cero
                    br
                .form-group
                    label.form-label(for="fechaDeDescarte") Fecha Descarte:
                    .input-group.has-validation
                        input.form-control(type="date" id="fechaDeDescarte" name="fechaDeDescarte" required)
                        #fechaInvalida.invalid-feedback(style="display: none")
                    br
                button(type="submit" class="btn btn-primary") Guardar
                | &nbsp;&nbsp;&nbsp;&nbsp;
                button(type="button" class="btn btn-primary" onclick="window.history.back()") Volver
script.
    const cantVacunas = /^(?!0+$)[0-9]+$/;
    const fechaDescartePattern = /^(20)\d\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/;

    function validarRegex(regex){
            if(!regex.test($(this).val())){
                this.addClass('is-invalid');
                this.removeClass('is-valid');
            } else {
                this.addClass('is-valid');
                this.removeClass('is-invalid');
            }
    }

    $(function () {
        
        $('#cant-vac').on('keyup', validarRegex.bind($('#cant-vac'), cantVacunas));
        
        $('#DNIAgente').on('change', function(){
            validarDescarte();
        });

        $('#numeroDeSerie').on('change', function(){
            validarDescarte();
        });

        $('#empresaDescartante').on('change', function(){
            validarDescarte();
        });

        $('#motivo').on('change', function(){
            validarDescarte();
        });
    
        function validarDescarte() {
            const valorSeleccionadoAgente = $('#DNIAgente').val();
            const valorSeleccionadoNumSerie = $('#numeroDeSerie').val();
            const valorSeleccionadoEmpDescartante = $('#empresaDescartante').val();
            const valorSeleccionadoMotivo = $('#motivo').val();
            const agenteInvalidoMsg = $('#agenteInvalido');
            const numSerieInvalidoMsg = $('#numSerieInvalido');
            const empDescartanteInvalidoMsg = $('#empDescartanteInvalido');
            const motivoInvalidoMsg = $('#motivoInvalido');
            let validacionAgente = true;
            let validacionNumSerie = true;
            let validacionEmpDescartante = true;
            let validacionMotivo = true;

            if (valorSeleccionadoAgente === '') {
                $('#DNIAgente').addClass('is-invalid').removeClass('is-valid');
                agenteInvalidoMsg.show().text('Debe seleccionar un Agente de Salud');
                validacionAgente = false;
            } else {
                $('#DNIAgente').addClass('is-valid').removeClass('is-invalid');
                agenteInvalidoMsg.hide();
            }

            if (valorSeleccionadoNumSerie === '') {
                $('#numeroDeSerie').addClass('is-invalid').removeClass('is-valid');
                numSerieInvalidoMsg.show().text('Debe seleccionar un Lote');
                validacionNumSerie = false;
            } else {
                $('#numeroDeSerie').addClass('is-valid').removeClass('is-invalid');
                numSerieInvalidoMsg.hide();
            }

            if (valorSeleccionadoEmpDescartante === '') {
                $('#empresaDescartante').addClass('is-invalid').removeClass('is-valid');
                empDescartanteInvalidoMsg.show().text('Debe seleccionar una Empresa');
                validacionEmpDescartante = false;
            } else {
                $('#empresaDescartante').addClass('is-valid').removeClass('is-invalid');
                empDescartanteInvalidoMsg.hide();
            }

            if (valorSeleccionadoMotivo === '') {
                $('#motivo').addClass('is-invalid').removeClass('is-valid');
                motivoInvalidoMsg.show().text('Debe seleccionar un Motivo');
                validacionMotivo = false;
            } else {
                $('#motivo').addClass('is-valid').removeClass('is-invalid');
                motivoInvalidoMsg.hide();
            }
            return validacionAgente && validacionNumSerie && validacionEmpDescartante && validacionMotivo;
        }

        $('#fechaDeDescarte').on('change', function() {
            validarFechaDescarte();
        });
        
        function validarFechaDescarte() {
            const fechaDescarteValue = $('#fechaDeDescarte').val();
            const fechaActual = new Date().toISOString().split('T')[0]; // Obtiene la fecha actual en formato ISO yyyy-mm-dd
            const fechaInvalidaMsg = $('#fechaInvalida');
        
            if (fechaDescarteValue <= fechaActual) {
                $('#fechaDeDescarte').addClass('is-valid').removeClass('is-invalid');
                $('#fechaInvalida').hide();
                return true;
            } else {
                $('#fechaDeDescarte').addClass('is-invalid').removeClass('is-valid');
                $('#fechaInvalida').show().text('La fecha debe ser menor o igual a la fecha actual');
                return false;
            }
        }

        $('#formDescarte').submit(function(event) {
            event.preventDefault();

            const comboValido = validarDescarte();
            if (comboValido){
                const fechaDescarteValue = $('#fechaDeDescarte').val();
                const fechaActual = new Date().toISOString().split('T')[0]; // Obtiene la fecha actual en formato ISO yyyy-mm-dd
                const fechaInvalidaMsg = $('#fechaInvalida');

                if (fechaDescarteValue <= fechaActual) {
                    event.target.submit();
                } else {
                   fechaInvalidaMsg.show().text('La fecha debe ser menor o igual a la fecha actual');
                }
            } else {
                
            }
        });
    });
    
