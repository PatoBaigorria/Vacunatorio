-const title ='Actualizar el descarte de vacuna'
include ..\includes\layout
block content
html(lang='es') 
body
    h2.text-center Actualice los datos del descarte
    if messages.error
        .alert.alert-danger
            = messages.error
    div.modal#alertModal(tabindex='-1' role='dialog' aria-labelledby='alertModalLabel' aria-hidden='true')
        div.modal-dialog(role='document')
            div.modal-content
                div.modal-header
                    h5.modal-title#alertModalLabel Alerta
                    button.close(type='button' data-bs-dismiss='modal' aria-label='Close')
                        span(aria-hidden='true') ×
                div.modal-body
                    p#mensajeAlerta.text-center
    form#form(action=`/descartes/${descarte.idDescarte}?_method=PUT` method='post')
        .form-group
            label.form-label(for='DNIAgente') Seleccione un Agente de Salud Existente:
            .input-group.has-validation
                select.form-select(id='DNIAgente' name='DNIAgente' required class=(errors && errors.DNIAgente ? 'is-invalid' : 'is-valid'))
                    option(value='', disabled selected hidden) Seleccione un agente

        .form-group
            label.form-label(for='numeroDeSerie') Nº de Serie de Lote Interno:
            .input-group.has-validation
                select.form-select(class=(errors && errors.numeroDeSerie ? 'is-invalid' : 'is-valid') id='numeroDeSerie' name='numeroDeSerie' required)
                    each lote in lotesInternos
                        option(value=lote.numeroDeSerie selected=descarte.numeroDeSerie == lote.numeroDeSerie)= lote.numeroDeSerie
                if errors && errors.numeroDeSerie
                    .invalid-feedback #{errors.numeroDeSerie}
        .form-group
            label.form-label(for='empresaDescartante') Empresa Descartante:
            .input-group.has-validation
                select.form-select(class=(errors && errors.empresaDescartante ? 'is-invalid' : 'is-valid') id='empresaDescartante' name='empresaDescartante' required)
                    each empresa in empresas
                        option(value=empresa selected=descarte.empresaDescartante == empresa)= empresa
                if errors && errors.empresaDescartante
                    .invalid-feedback #{errors.empresaDescartante}
        .form-group
            label.form-label(for='motivo') Motivo de descarte:
            .input-group.has-validation
                select.form-select(class=(errors && errors.motivo ? 'is-invalid' : 'is-valid') id='motivo' name='motivo' required)
                    each motivo in motivos
                        option(value=motivo selected=descarte.motivo == motivo)= motivo
                if errors && errors.motivo
                    .invalid-feedback #{errors.motivo}
        .form-group
            label.form-label(for='cantidadDeVacunas') Cantidad de Vacunas:
            .input-group.has-validation
                input.form-control(class=(errors && errors.cantidadDeVacunas ? 'is-invalid' : 'is-valid') id='cantidadDeVacunas' type='text' name='cantidadDeVacunas' value=descarte.cantidadDeVacunas required)
                if errors && errors.cantidadDeVacunas
                    .invalid-feedback #{errors.cantidadDeVacunas}
        .form-group
            label.form-label(for='fechaDeDescarte') Fecha de descarte:
            .input-group.has-validation
                input.form-control(class=(errors && errors.fechaDeDescarte ? 'is-invalid' : 'is-valid') id='fechaDeDescarte' type='date' name='fechaDeDescarte' value=descarte.fechaDeDescarte required)
                if errors && errors.fechaDeDescarte
                    .invalid-feedback #{errors.fechaDeDescarte}
        br
        div.text-center
            button.btn.btn-primary(type='submit') Actualizar
            | &nbsp;&nbsp;&nbsp;&nbsp;
            button(type="button" class="btn btn-primary" onclick="window.location.href='/descartes'") Volver
script.
    $(function () {
        function mostrarAlerta() {
            $('#mensajeAlerta').text('¡Datos incorrectos! Por favor, verifica la información ingresada.');
            $('#alertModal').modal('show');
        }

        function mostrarError(campo, error) {
            campo.addClass('is-invalid').removeClass('is-valid');
            $(`#${campo.attr('id')}${error}`).removeClass('d-none');
        }

        function quitarError(campo) {
            campo.addClass('is-valid').removeClass('is-invalid');
            $(`div[id^=${campo.attr('id')}].invalid-feedback`).addClass('d-none');
        }

        function cargarAgentes() {
            let descarte = !{JSON.stringify(descarte)};
            let personas = !{JSON.stringify(personas)};
            console.log('Descarte:', descarte);
            console.log('Personas:', personas);
            let ag = personas.find(agente => agente.DNI == descarte.DNIAgente);
            let agentes = personas.filter(agente => agente.activo == 1 && agente.ocupacion == 'agente de salud');

            $('#DNIAgente').empty();  // Vaciar la lista antes de cargar
            if (agentes.length == 0) {
                if (ag) {
                    $('#DNIAgente').append(`<option hidden selected value=${ag.DNI}>${ag.nombre} ${ag.apellido}</option>`);
                }
            } else {
                agentes.forEach(agente => {
                    if (descarte.DNIAgente == agente.DNI) {
                        $('#DNIAgente').append(`<option selected value=${agente.DNI}>${agente.nombre} ${agente.apellido}</option>`);
                    } else {
                        $('#DNIAgente').append(`<option value='${agente.DNI}'>${agente.nombre} ${agente.apellido}</option>`);
                    }
                });
            }
        }


        function cargarLotes() {
            let descarte = !{JSON.stringify(descarte)};
            let lot = !{JSON.stringify(lotesInternos)}.find(lote => lote.numeroDeSerie == descarte.numeroDeSerie);
            let lotes = !{JSON.stringify(lotesInternos)}.filter(lote => lote.activo == 1).filter(lote => lote.fechaDeLlegadaDepositoNacional != null);
            $('#numeroDeSerie').empty();  // Vaciar la lista antes de cargar
            if (lotes.length == 0) {
                $('#numeroDeSerie').append(`<option selected hidden value=${lot.numeroDeSerie}>${lot.numeroDeSerie}</option>`);
                mostrarError($('#numeroDeSerie'), 'SinLotes');
            } else {
                lotes.forEach(lote => {
                    if (lot.numeroDeSerie == lote.numeroDeSerie) {
                        $('#numeroDeSerie').append(`<option selected value=${lote.numeroDeSerie}>${lote.numeroDeSerie}</option>`);
                    } else {
                        $('#numeroDeSerie').append(`<option value=${lote.numeroDeSerie}>${lote.numeroDeSerie}</option>`);
                    }
                });
            }
        }

        function cargarMotivos() {
            let descarte = !{JSON.stringify(descarte)};
            $('#motivo').empty();  // Vaciar la lista antes de cargar
            [
                'Vencida',
                'Rotura',
                'Pérdida de frío',
                'Contaminación'
            ].forEach(motiv => {
                if (motiv == descarte.motivo) {
                    $('#motivo').append(`<option selected value='${motiv}'>${motiv}</option>`);
                } else {
                    $('#motivo').append(`<option value='${motiv}'>${motiv}</option>`);
                }
            });
        }

        function cargarEmpresasDescartantes() {
            let descarte = !{JSON.stringify(descarte)};
            $('#empresaDescartante').empty();  // Vaciar la lista antes de cargar
            [
                'Veolia',
                'Clean Harbors',
                'Waste Management',
                'Stericycle'
            ].forEach(empresa => {
                if (empresa == descarte.empresaDescartante) {
                    $('#empresaDescartante').append(`<option selected value='${empresa}'>${empresa}</option>`);
                } else {
                    $('#empresaDescartante').append(`<option value='${empresa}'>${empresa}</option>`);
                }
            });
        }

        function validarCantidadDeVacunas() {
            let descarte = !{JSON.stringify(descarte)};
            quitarError($('#cantidadDeVacunas'));
            if ($('#cantidadDeVacunas').val() == '') {
                mostrarError($('#cantidadDeVacunas'), 'Vacio');
            } else if (!/^[0-9]{1,}$/.test($('#cantidadDeVacunas').val()) || $('#cantidadDeVacunas').val() < 0 || $('#cantidadDeVacunas').val()[0] == '0') {
                mostrarError($('#cantidadDeVacunas'), 'Invalido');
            } else {
                let cantidadDeVacunasIngresadas = parseInt($('#cantidadDeVacunas').val());
                let {cantidadDeVacunasRestantes} = !{JSON.stringify(lotesInternos)}.find(lote => lote.numeroDeSerie == descarte.numeroDeSerie);
                if (cantidadDeVacunasIngresadas > cantidadDeVacunasRestantes) {
                    mostrarError($('#cantidadDeVacunas'), 'SuperaCantidad');
                }
            }
        }

        $('#cantidadDeVacunas').blur(validarCantidadDeVacunas);
        $('#empresaDescartante').blur(() => {
            quitarError($('#empresaDescartante'));
            if ($('#empresaDescartante').val() == '') {
                mostrarError($('#empresaDescartante'), 'SinEmpresas');
            }
        });
        $('#motivo').blur(() => {
            quitarError($('#motivo'));
            if ($('#motivo').val() == '') {
                mostrarError($('#motivo'), 'SinMotivos');
            }
        });
        $('#fechaDeDescarte').blur(() => {
            quitarError($('#fechaDeDescarte'));
            if ($('#fechaDeDescarte').val() == '') {
                mostrarError($('#fechaDeDescarte'), 'FechaVacia');
            } else if ($('#fechaDeDescarte').val() > new Date().toISOString().split('T')[0]) {
                mostrarError($('#fechaDeDescarte'), 'FechaFutura');
            }
        });

        cargarLotes();
        cargarAgentes();
        cargarEmpresasDescartantes();
        cargarMotivos();
        $('#alertModal').modal({backdrop: 'static', keyboard: false});

    });
