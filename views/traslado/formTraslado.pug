-const title ='Crear un traslado'
include ..\includes\layout
block content
html(lang="es")    
body
    h2.text-center Ingrese los datos del traslado
    if messages.error
        .alert.alert-danger
            = messages.error
    div.modal#alertModal(tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true")
        div.modal-dialog(role="document")
            div.modal-content
                div.modal-header
                    h5.modal-title#alertModalLabel Alerta
                    button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
                        span(aria-hidden="true") ×
                div.modal-body
                    p#mensajeAlerta.text-center
    form#form(action="/traslados" method="post")
        .form-group
            label.form-label(for="idCentroDeVacunacionOrigen") Centro de vacunación desde donde saldra el lote interno:
            .input-group.has-validation
                select.form-select.is-valid#idCentroDeVacunacionOrigen(name="idCentroDeVacunacionOrigen" required)
        .form-group
            label.form-label(for="numeroDeSerie") Nº de Serie del lote interno que sera trasladado:
            .input-group.has-validation
                select.form-select.is-valid#numeroDeSerie(name="numeroDeSerie" required)
        .form-group
            label.form-label(for="idCentroDeVacunacion") Centro de Vacunación al que se trasladara el lote interno:
            .input-group.has-validation
                select.form-select.is-valid#idCentroDeVacunacion(name="idCentroDeVacunacion" required)
        .form-group
            label.form-label(for="fechaDeSalida") Fecha de salida del lote interno hacia el centro de vacunación:
            .input-group.has-validation
                input.form-control.is-invalid#fechaDeSalida(type="date" name="fechaDeSalida")
                .invalid-feedback.d-none#fechaDeSalidaVacio El campo no puede estar vacío
                .invalid-feedback.d-none#fechaDeSalidaSuperior La fecha de salida es superior a la actual
                .invalid-feedback.d-none#fechaDeSalidaAnterior La fecha de salida es anterior a la fecha de llegada al depósito provincial
        .form-group
            label.form-label(for="fechaDeLlegada") Fecha de llegada del lote interno al centro de vacunación:
            .input-group.has-validation
                input.form-control.is-valid#fechaDeLlegada(type="date" name="fechaDeLlegada" disabled)
                .invalid-feedback.d-none#fechaDeLlegadaSuperior La fecha de llegada es superior a la actual
                .invalid-feedback.d-none#fechaDeLlegadaIncongruente La fecha de llegada no puede ser anterior a la fecha de salida
        br
        div.text-center
            button(type="submit" class="btn btn-primary") Crear
            | &nbsp&nbsp&nbsp&nbsp
            button(type="button" class="btn btn-primary" onclick="window.history.back()") Volver



script.
    $(function () {
        $(document).ready(function () {
            function mostrarError(campo, mensaje) {
                campo.addClass('is-invalid').removeClass('is-valid');
                campo.next('.invalid-feedback').text(mensaje).removeClass('d-none');
            }

            function quitarError(campo) {
                campo.addClass('is-valid').removeClass('is-invalid');
                campo.next('.invalid-feedback').addClass('d-none');
            }

            function cargarCentroOrigen() {
                $('#idCentroDeVacunacionOrigen').empty();
                const lotes = !{JSON.stringify(lotesInternos)}
                if (lotes.length == 0) {
                    $('#idCentroDeVacunacionOrigen').append('<option disabled selected hidden value=""> No hay ningún centro de vacunación disponible para trasladar </option>');
                } else {
                    lotes.forEach(lote => {
                        console.log(lote.idCentroDeVacunacion)
                        $('#idCentroDeVacunacionOrigen').append(`<option value="${lote.idCentroDeVacunacion}">${lote.idCentroDeVacunacion}</option>`);
                    });
                }
            }

            function cargarLotes() {
                $('#numeroDeSerie').empty();
                const lotes = !{JSON.stringify(lotesInternos)}.filter(lote => lote.activo == 1).filter(lote => lote.idCentroDeVacunacion == $('#idCentroDeVacunacionOrigen').val());
                if (lotes.length == 0) {
                    $('#numeroDeSerie').append('<option disabled selected hidden value=""> No hay ningún lote disponible para trasladar </option>');
                } else {
                    lotes.forEach(lote => {
                        $('#numeroDeSerie').append(`<option value="${lote.numeroDeSerie}">${lote.numeroDeSerie}</option>`);
                    });
                }
            }

            function cargarCentros() {
                $('#idCentroDeVacunacion').empty();
                const lote = !{JSON.stringify(lotesInternos)}.find(lote => lote.numeroDeSerie == $('#numeroDeSerie').val());
                const centros = !{JSON.stringify(centrosDeVacunacion)}.filter(centro => centro.activo == 1).filter(centro => centro.idCentroDeVacunacion != lote.idCentroDeVacunacion);
                if (centros.length == 0) {
                    $('#idCentroDeVacunacion').append('<option disabled selected hidden value=""> No hay ningún centro de vacunación disponible para trasladar </option>');
                } else {
                    centros.forEach(centro => {
                        console.log(centro.idCentroDeVacunacion)
                        $('#idCentroDeVacunacion').append(`<option value="${centro.idCentroDeVacunacion}">${centro.idCentroDeVacunacion}</option>`);
                    });
                }
            }

            function validarFechaDeSalida() {
                quitarError($('#fechaDeSalida'));
                if (!$('#fechaDeSalida').val()) {
                    mostrarError($('#fechaDeSalida'), 'El campo no puede estar vacío.');
                    return false;
                } else {
                    const fechaIngresada = new Date($('#fechaDeSalida').val());
                    const fechaActual = new Date();
                    fechaIngresada.setHours(24, 0, 0, 0);
                    fechaActual.setHours(0, 0, 0, 0);

                    const loteSeleccionado = !{JSON.stringify(lotesInternos)}.find(lote => lote.numeroDeSerie == $('#numeroDeSerie').val());
                    if (!loteSeleccionado.fechaDeSalidaDepositoProvincial) {
                        mostrarError($('#fechaDeSalida'), 'Elija otro lote interno que haya salido del depósito provincial.');
                        return false;
                    }

                    const fechaSalidaDepositoProvincial = new Date(loteSeleccionado.fechaDeSalidaDepositoProvincial);
                    if (fechaIngresada <= fechaSalidaDepositoProvincial) {
                        mostrarError($('#fechaDeSalida'), 'La fecha de salida al centro de vacunación debe ser posterior a la fecha de salida del depósito provincial.');
                        return false;
                    }

                    if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                        mostrarError($('#fechaDeSalida'), 'La fecha de salida no puede ser futura.');
                        return false;
                    }
                }
                return true;
            }

            function habilitarFechaDeLlegada() {
                if ($('#fechaDeSalida').val()) {
                    $('#fechaDeLlegada').prop('disabled', false);
                    quitarError($('#fechaDeLlegada'));
                } else {
                    $('#fechaDeLlegada').prop('disabled', true);
                    quitarError($('#fechaDeLlegada'));
                }
            }

            function validarFechaDeLlegada() {
                quitarError($('#fechaDeLlegada'));
                const fechaIngresada = new Date($('#fechaDeLlegada').val());
                const fechaActual = new Date();
                fechaIngresada.setHours(24, 0, 0, 0);
                fechaActual.setHours(0, 0, 0, 0);
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($('#fechaDeLlegada'), 'La fecha de llegada no puede ser futura.');
                    return false;
                } else {
                    const fechaSalida = new Date($('#fechaDeSalida').val());
                    if (fechaIngresada < fechaSalida) {
                        mostrarError($('#fechaDeLlegada'), 'La fecha de llegada debe ser posterior a la fecha de salida al centro de vacunación.');
                    return false;
                    }
                }
                return true;
            }

            function limpiarFechaYErrores() {
                $('#fechaDeSalida').val('');
                $('#fechaDeLlegada').val('').prop('disabled', true);
                quitarError($('#fechaDeSalida'));
                quitarError($('#fechaDeLlegada'));
            }

            function validarFormulario() {
                let formularioValido = true;
                console.log("FechaSalida", validarFechaDeSalida())
                if (!validarFechaDeSalida()) {
                    formularioValido = false;
                }
                console.log("FechaLlegada", validarFechaDeLlegada())
                
                if (!validarFechaDeLlegada()) {
                    formularioValido = false;
                }

                return formularioValido;
            }
            
            cargarCentroOrigen()
            cargarLotes();
            cargarCentros();

            $('#idCentroDeVacunacionOrigen').on('change', function () {
                limpiarFechaYErrores();
                cargarLotes();
                cargarCentros()
                quitarError($('#idCentroDeVacunacionOrigen'));
            });

            $('#numeroDeSerie').on('change', function () {
                limpiarFechaYErrores();
                cargarCentros();
                quitarError($('#numeroDeSerie'));
            });

            $('#fechaDeSalida').on('change', function () {
                habilitarFechaDeLlegada();
                validarFechaDeSalida();
            });

            $('#fechaDeLlegada').on('change', function () {
                validarFechaDeLlegada();
            });

            $('#form input').on('keypress', function (event) {
                if (event.which === 13) {
                    if (!validarFormulario()) {
                        event.preventDefault();
                    }
                }
            });

            $('#form button[type="submit"]').on('click', function (event) {
                console.log(validarFormulario);
                if (!validarFormulario()) {
                    console.log("Dentro del if", validarFormulario);
                    event.preventDefault();
                }

            });
        });

    });



