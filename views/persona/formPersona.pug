- var title ='Alta de una persona'
include ..\includes\layout
block content
html(lang="es")
head
    link(rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="")
    script(src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin="")
body
    h2.text-center Ingrese los datos de la persona
    if messages.error
        .alert.alert-danger
            = messages.error
    div.modal#alertModal(tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true")
        div.modal-dialog(role="document")
            div.modal-content
                div.modal-header
                    h5.modal-title#alertModalLabel Alerta
                    button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
                        span(aria-hidden="true") ×
                div.modal-body
                    p#mensajeAlerta.text-center Mensaje de alerta
    form#form(action="/personas" method="post")
        .form-group
            label.form-label(for="dni") DNI:
            .input-group.has-validation
                input.form-control(type="number" id="dni" name="DNI" placeholder="Ingrese un DNI de 7 u 8 digitos" title="El DNI debe contener 7 u 8 digitos" required)
                .invalid-feedback.d-none(id="dniVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="dniInvalido") El DNI ingresado no es valido
                .invalid-feedback.d-none(id="dniExiste") El DNI ingresado ya existe en la BD
        .form-group
            label.form-label(for="nombre") Nombre:
            .input-group.has-validation
                input.form-control(type="text" id="nombre" name="nombre" placeholder="Ingrese un nombre de 3 a 50 caracteres" title="El nombre solo puede contener un máximo de cincuenta caracteres" required)
                .invalid-feedback.d-none(id="nombreVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="nombreInvalido") El nombre debe contener más de dos y menos de cincuenta y un caracteres
                .invalid-feedback.d-none(id="nombreNumeros") El nombre solo puede contener letras
        .form-group
            label.form-label(for="apellido") Apellido:
            .input-group.has-validation
                input.form-control(type="text" id="apellido" name="apellido" placeholder="Ingrese un nombre de 3 a 50 caracteres" title="El apellido solo puede contener un máximo de cincuenta caracteres" required)
                .invalid-feedback.d-none(id="apellidoVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="apellidoInvalido") El apellido debe contener más de dos y menos de cincuenta y un caracteres
                .invalid-feedback.d-none(id="apellidoNumeros") El apellido solo puede contener letras
        .form-group
            label.form-label(for="email") Email:
            .input-group.has-validation
                input.form-control(type="email" id="email" name="email" placeholder="Ingrese el email de la persona" title="Ingrese un email válido" required)
                .invalid-feedback.d-none(id="emailVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="emailInvalido") El email no es válido
        .form-group
            label.form-label(for="fechaDeNacimiento") Fecha de Nacimiento:
            .input-group.has-validation
                input.form-control(type="date" id="fechaDeNacimiento" name="fechaDeNacimiento" required)
                .invalid-feedback.d-none(id="fechaDeNacimientoVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="fechaDeNacimientoAntiguo") La fecha ingresada no puede ser anterior a cien años
                .invalid-feedback.d-none(id="fechaDeNacimientoSuperior") La fecha de nacimiento es superior a la actual
                .invalid-feedback.d-none(id="fechaDeNacimientoAgente") La fecha de nacimiento debe superior cuando se trata de un agente de salud
        .form-group
            label.form-label(for="ocupacion") Ocupación:
            .input-group.has-validation
                select.form-select(name="ocupacion" id="ocupacion" required)
                    option(disabled selected hidden value="") Selecciona una ocupación
                    option(value="agente de salud") Agente de Salud
                    option(value="otro") Otro
                .invalid-feedback.d-none(id="ocupacionSinSeleccionar") Seleccione una ocupación
        .form-group.d-none#matriculaDiv
            label.form-label(for="matricula" id="matriculaLabel") Matrícula:
            .input-group.has-validation
                input.form-control(type="number" id="matricula" name="matricula" placeholder="Ingrese una matrícula de 8 digitos" title="La matrícula debe contener 8 digitos")
                .invalid-feedback.d-none(id="matriculaVacio") El campo no puede estar vacío
                .invalid-feedback.d-none(id="matriculaInvalido") La matrícula no es valida
                .invalid-feedback.d-none(id="matriculaExiste") La matrícula ya existe
        .form-group
            label.form-label(for="genero") Género:
            .input-group.has-validation
                select.form-select(name="genero" id="genero" required)
                    option(disabled selected hidden value="") Seleccione un género
                    option(value="Masculino") Masculino
                    option(value="Femenino") Femenino
                    option(value="Otro") Otro
                .invalid-feedback.d-none(id="generoSinSeleccionar") Seleccione un género
        .form-group
            label.form-label(for="celular1") Celular 1:
            .input-group.has-validation
                input.form-control(type="tel" id="celular1" name="celular1" placeholder="Ingrese un celular de 10 digitos si posee" title="El celular debe contener 10 digitos")
                .invalid-feedback.d-none(id="celular1Invalido") El celular debe contener 10 digitos sin espacios ni guiones
                .invalid-feedback.d-none(id="celular1Letras") El celular no puede contener letras, espacios ni guiones
        .form-group
            label.form-label(for="celular2") Celular 2:
            .input-group.has-validation
                input.form-control(type="tel" id="celular2" name="celular2" placeholder="Ingrese un celular de 10 digitos si posee" title="El celular debe contener 10 digitos")
                .invalid-feedback.d-none(id="celular2Invalido") El celular debe contener 10 digitos sin espacios ni guiones
                .invalid-feedback.d-none(id="celular2Letras") El celular no puede contener letras, espacios ni guiones
        .form-group
            label.form-label(for="patologiaBase") Patologia Base:
            .input-group.has-validation
                select.form-select(name="patologiaBase" id="patologiaBase" required)
                    option(disabled selected hidden value="") Selecciona una patologia base
                    option(value="Ninguna") Ninguna
                    option(value="Obesidad") Obesidad
                    option(value="Diabetes") Diabetes
                    option(value="Enfermedad respiratorio cronica") Enfermedad respiratoria crónica
                    option(value="Enfermedad cardiaca cronica") Enfermedad cardiaca crónica
                    option(value="Inmunodeficiencia congénita o adquirida") Inmunodeficiencia congénita o adquirida
                    option(value="Enfermedad oncohematologica") Enfermedad oncohematológica
                    option(value="Trasplante de organo solido o de medula osea") Trasplante de órgano sólido o de médula ósea
                    option(value="Insuficiencia renal cronica") Insuficiencia renal crónica
                    option(value="Otro") Otro
                .invalid-feedback.d-none(id="patologiaBaseSinSeleccionar") Seleccione una patologia
            label Seleccione la ubicación en el mapa:
            #map
        .form-group
            label.form-label(for="longitud") Longitud:
            input.form-control(type="text" id="longitud" name="longitud" readonly)
        .form-group
            label.form-label(for="latitud") Latitud:
            input.form-control(type="text" id="latitud" name="latitud" readonly)
        br
        div.text-center
            button(type="submit" class="btn btn-primary") Alta
            | &nbsp;&nbsp;&nbsp;&nbsp;
            button(type="button" class="btn btn-primary" onclick="window.history.back()") Volver
script.
    $(function () {
        $('#map').css('width', $('#form').outerWidth() + 'px');
        $().ready(function () {
            initMap();
        });

        function initMap() {
            let map = L.map('map');
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            if ("geolocation" in navigator) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var userLocation = [position.coords.latitude, position.coords.longitude];
                    map.setView(userLocation, 15);
                    var marker = L.marker(userLocation, { draggable: true }).addTo(map);
                    marker.on('dragend', function (event) {
                        actualizarCoordenadas(event.target.getLatLng());
                    });
                    actualizarCoordenadas(map.getCenter());
                });
            }
        }

        function actualizarCoordenadas(coords) {
            var lng = coords.lng.toFixed(6);
            var lat = coords.lat.toFixed(6);
            $('#longitud').val(lng);
            $('#latitud').val(lat);
        }

        function mostrarAlerta() {
            $('#mensajeAlerta').text("¡Datos incorrectos! Por favor, verifica la información ingresada.");
            $('#alertModal').modal('show');
        }

        // Funciones para mostrar y quitar errores
        function mostrarError(campo, error) {
            campo.addClass('is-invalid').removeClass('is-valid').addClass();
            $('#' + campo.attr('id') + error).removeClass('d-none');
        }

        function quitarError(campo) {
            campo.addClass('is-valid').removeClass('is-invalid');
            $('div[id^=' + campo.attr('id') + '].invalid-feedback').addClass('d-none');
        }

        function validarDNI() {
            quitarError($('#dni'));
            if (!$('#dni').val()) {
                mostrarError($('#dni'), 'Vacio');
            } else if (!/^[0-9]{7,8}$/.test($('#dni').val())) {
                mostrarError($('#dni'), 'Invalido');
            } else {
                // Cambiar a Ajax
                if (!{JSON.stringify(agentes)}.some(agente => agente.DNI == $('#dni').val())) {
                    mostrarError($('#dni'), 'Existe');
                }
            }
        }

        function validarNombreYApellido(campo){
            quitarError(campo);
            if(!campo.val()){
                mostrarError(campo, 'Vacio');
            } else if(!/^[A-Za-záéíóúüñÁÉÍÓÚÜÑ\s]{1,}$/.test(campo.val())){
                mostrarError(campo, 'Numeros');
            } else if(campo.val().length < 3 || campo.val().length > 50){
                mostrarError(campo, 'Invalido');
            }
        }

        function validarEmail(){
            quitarError($('#email'));
            if (!$('#email').val()) {
                mostrarError($('#email'), 'Vacio');
            } else if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test($('#email').val())) {
                mostrarError($('#email'), 'Invalido');
            } 
        }

        function validarFecha() {
            // Limpiar errores previos
            quitarError($('#fechaDeNacimiento'))
            if (!$('#fechaDeNacimiento').val()) {
                mostrarError($('#fechaDeNacimiento'), 'Vacio');
            } else {
                let fechaIngresada = new Date($('#fechaDeNacimiento').val())
                let fechaActual = new Date()
                fechaIngresada.setHours(24, 0, 0, 0)
                fechaActual.setHours(0, 0, 0, 0)
                if (((fechaIngresada - fechaActual) / (1000 * 60 * 60 * 24)) > 0) {
                    mostrarError($('#fechaDeNacimiento'), 'Superior');
                } else {
                    fechaActual.setFullYear(fechaActual.getFullYear()-100);
                    if (fechaIngresada < fechaActual) {
                        mostrarError($('#fechaDeNacimiento'), `Antiguo`);
                    } else if ($('#ocupacion option:selected').val() === 'agente de salud' && (((fechaIngresada - fechaActual)) > 2429996400000)) {
                        mostrarError($('#fechaDeNacimiento'), 'Agente');
                    }
                }
            }
        }

        function validarComboBox(campo){
            if(!campo.val()){
                mostrarError(campo, 'SinSeleccionar');
                $('#' + campo.attr('id') + 'SinSeleccionar').removeClass('d-none');
            } else {
                quitarError(campo);
            }
        }

        function mostrarMatricula(){
            if($('#ocupacion option:selected').val() === 'agente de salud'){
                $('#matriculaDiv').removeClass('d-none');
            } else {
                $('#matriculaDiv').addClass('d-none');
                $('#matricula').val('');
            }
        }

        function validarMatricula(){
            quitarError($('#matricula'));
            if(!$('#matricula').val()){
                mostrarError($('#matricula'), 'Vacio');
            } else if(!/^[0-9]{8,8}$/.test($('#matricula').val())){
                mostrarError($('#matricula'), 'Invalido');
            } else {
                !{JSON.stringify(agentes)}.forEach(agente => {
                    if(agente.matricula != null){
                        if(agente.matricula == $('#matricula').val()) mostrarError($('#matricula'), 'Existe')
                    }
                })
            }
        }

        function validarCelular(campo) {
            quitarError(campo)
            if (campo.val() !== '') {
                if(!/^[0-9]{1,}$/.test(campo.val())){
                    mostrarError(campo, 'Letras')
                } else if (campo.val().length != 10) {
                    mostrarError(campo, 'Invalido')
                } 
            }
        }

        function validarFormulario() {
            let inputs = $('#form input:visible:not([d-none]), #form select:visible:not([d-none])');
            let camposInvalidos = false;
            inputs.each(function () {
                if ($(this).attr('id') !== 'longitud' && !$(this).hasClass('d-none') && $(this).attr('id') !== 'latitud') {
                    if ($(this).hasClass('is-invalid')) {
                        camposInvalidos = true;
                    }
                }
            });
            if (camposInvalidos) {
                mostrarAlerta();
                return false;
            }
            return true;
        }

        // Eventos
        $('#dni').on('keyup focusout', function () {
            //validarCampo($(this), 'dni', '', 'Vacio', 'Invalido', 'Existe');
            validarDNI()
        });

        $('#nombre, #apellido').on('keyup focusout', function () {
            validarNombreYApellido($(this))
        });

        $('#email').on('keyup focusout', function() {
            validarEmail()
        });

        $('#fechaDeNacimiento').on('keyup focusout', function () {
            validarFecha();
        });

        $('#ocupacion').on('change', function () {
            validarFecha();
            validarComboBox($(this));
            mostrarMatricula();
        });

        $('#matricula').on('keyup focusout', function () {
            validarMatricula()
        });

        $('#genero, #patologiaBase').on('change', function () {
            validarComboBox($(this));
        });

        $('#celular1, #celular2').on('keyup focusout', function() {
            validarCelular($(this));
        });

        $('#map').on('dragend', function(event) {
            if($(this).hasClass('is-invalid')){
                quitarError($('#map'));
                quitarError($('#longitud'));
                quitarError($('#latitud'));
            }
            var lng = event.target.getCenter().lng.toFixed(6);
            var lat = event.target.getCenter().lat.toFixed(6);
            actualizarCoordenadas({ lng: lng, lat: lat });
        });

        let press = 0
        $('#alertModal').on('keyup', function (event) {
            // Si la tecla presionada es "Enter", oculta el modal
            if(event.key === 'Enter'){
                press = press+1
            }
            if (event.key === 'Escape' || press == 2) {
                $('#alertModal').modal('hide');
                press = 0
            }
        });

        $('#alertModal').on('hidden.bs.modal', function () {
            // Buscar el primer elemento con la clase 'is-invalid' y hacer foco en él
            var primerInvalido = $('.is-invalid:first');
            if (primerInvalido.length > 0) {
                primerInvalido.focus();
            }
        });

        $('#longitud, #latitud').on('focusout', function() {
            $(this).addClass('is-valid').removeClass('is-invalid');
        });

        // Evento cuando se presiona una tecla en el modal

        // Evento cuando se oculta el modal
        $('#alertModal').on('hidden.bs.modal', function () {
            // Buscar el primer elemento con la clase 'is-invalid' y hacer foco en él
            var primerInvalido = $('.is-invalid:first');
            if (primerInvalido.length > 0) {
                primerInvalido.focus();
            }
        });

        $('#dni, #nombre, #apellido, #email, #fechaDeNacimiento, #matricula, #celular1, #celular2, #longitud, #latitud').trigger('focusout');
        $('#ocupacion, #genero, #patologiaBase').trigger('change');
        $('#dni').trigger('focus')

        // Asociar el evento submit al formulario
        $('#form input').on('keypress', function (event) {
            if (event.which === 13) {
                console.log("Formulario enviado por teclado");
                //console.log(validarFormulario());
                if(!validarFormulario()){
                    event.preventDefault();
                }
                // Puedes agregar lógica adicional aquí si es necesario
            }
        });

        $('#form button[type="submit"]').on('click', function (event) {
            console.log("Botón de envío clicado");
            if (!validarFormulario()) {
                event.preventDefault();
            }
        });

    });
